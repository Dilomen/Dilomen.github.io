(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{499:function(s,t,a){"use strict";a.r(t);var n=a(28),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"js-变量的存放"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-变量的存放"}},[s._v("#")]),s._v(" JS 变量的存放")]),s._v(" "),a("p",[s._v("基本类型：保存在"),a("strong",[s._v("栈")]),s._v("内存中，因为这些类型在内存中分别占有固定大小的空间，通过按值来访问")]),s._v(" "),a("p",[s._v("引用类型：保存在"),a("strong",[s._v("堆")]),s._v("内存中，因为这些值的大小是不固定的，但是内存地址值的大小是固定的，所以在"),a("strong",[s._v("栈")]),s._v("保存内存地址，所以通过先访问栈中的内存地址，再通过地址找到堆中的值")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// { name: 'aaa' }，因为只是把a的引用地址设为了null，并没有影响堆内存的对象，所以b的引用地址还是可以访问到堆内存里的内容")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// --\x3e undefined，由于.的优先级大于=，所以先执行a.x=a,此时a就是{n: 1,x:undefined}，然后执行a={n: 2}，所以a就被赋值为{n: 2}")]),s._v("\nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// --\x3e {n: 2}，a={n: 2}是指向了另一个地址，和b没有关系，但是a.x和b.x指向了同一个地址，a.x发生变化，b.x也发生变化，被赋值为{ n: 2 }")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"垃圾回收机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制"}},[s._v("#")]),s._v(" "),a("strong",[s._v("垃圾回收机制")])]),s._v(" "),a("p",[s._v("标记清除：将所有未被标记的内存当作垃圾，全部进行回收")]),s._v(" "),a("h3",{attrs:{id:"造成内存泄露的情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#造成内存泄露的情况"}},[s._v("#")]),s._v(" "),a("strong",[s._v("造成内存泄露的情况")])]),s._v(" "),a("ul",[a("li",[s._v("全局变量")]),s._v(" "),a("li",[s._v("未被清除的计时器（setInterval）或回调函数")]),s._v(" "),a("li",[s._v("脱离 DOM 的引用")]),s._v(" "),a("li",[s._v("闭包")])]),s._v(" "),a("h3",{attrs:{id:"set、map-和-weakset、weakmap-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set、map-和-weakset、weakmap-的区别"}},[s._v("#")]),s._v(" "),a("strong",[s._v("Set、Map 和 WeakSet、WeakMap 的区别")])]),s._v(" "),a("p",[a("strong",[s._v("弱引用")]),s._v("：即如果没有别处引用该键值的内容，那么该内存就会被垃圾回收机制回收")]),s._v(" "),a("ul",[a("li",[s._v("Set\n"),a("ul",[a("li",[s._v("成员唯一、无序且不重复")]),s._v(" "),a("li",[s._v("可以遍历")])])]),s._v(" "),a("li",[s._v("WeakSet\n"),a("ul",[a("li",[s._v("成员都是对象")]),s._v(" "),a("li",[s._v("成员都是"),a("strong",[s._v("弱引用")]),s._v("，可以被垃圾回收机制回收，可以用来保存 DOM 节点，不容易造成内存泄漏")]),s._v(" "),a("li",[s._v("不能遍历")])])]),s._v(" "),a("li",[s._v("Map\n"),a("ul",[a("li",[s._v("键值对的集合")]),s._v(" "),a("li",[s._v("可以遍历")])])]),s._v(" "),a("li",[s._v("WeakMap\n"),a("ul",[a("li",[s._v("只接受对象作为键名（null 除外），不接受其他类型的值作为键名")]),s._v(" "),a("li",[s._v("键名是"),a("strong",[s._v("弱引用")]),s._v("，键值可以是任意的，键名所指向的对象可以被垃圾回收，此时键名是无效的")]),s._v(" "),a("li",[s._v("不能遍历")])])])]),s._v(" "),a("h3",{attrs:{id:"_3-15-8-29-102-22-sort-返回的是啥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-15-8-29-102-22-sort-返回的是啥"}},[s._v("#")]),s._v(" "),a("strong",[s._v("[3, 15, 8, 29, 102, 22].sort()返回的是啥")])]),s._v(" "),a("ul",[a("li",[s._v("[102, 15, 22, 29, 3, 8]，默认的排序方法会将数组元素"),a("strong",[s._v("转换为字符串")]),s._v("，然后比较字符串中字符的 UTF-16 编码顺序来进行排序")]),s._v(" "),a("li",[s._v("正确姿势： [3, 15, 8, 29, 102, 22].sort((a,b) => {return a - b});")])]),s._v(" "),a("h3",{attrs:{id:"以下代码会输出什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以下代码会输出什么"}},[s._v("#")]),s._v(" "),a("strong",[s._v("以下代码会输出什么？")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  length"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  splice"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("splice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  push"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("push\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// {")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   "2": 1,')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   "3": 2,')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   length: 2,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   splice: Array.prototype.splice,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   push: Array.prototype.push")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// }")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[a("strong",[s._v("push 会根据数组的 length 来添加新项")]),s._v("，所以它访问到了 obj.length 为 2，所以就将 obj[2]=1,并且设置 obj.length 加 1 为 3，所以第二次将 obj[3]=2")]),s._v(" "),a("h3",{attrs:{id:"数组里面有-10-万个数据-取第一个元素和第-10-万个元素的时间相差多少"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组里面有-10-万个数据-取第一个元素和第-10-万个元素的时间相差多少"}},[s._v("#")]),s._v(" "),a("strong",[s._v("数组里面有 10 万个数据，取第一个元素和第 10 万个元素的时间相差多少")])]),s._v(" "),a("p",[s._v("一样，js 的数组实际上也是对象，其索引会被转化为字符串，作为属性名来获取值，查找又是使用"),a("strong",[s._v("哈希")]),s._v("表，所以第一个和第 10 万个查找速度是一样的")]),s._v(" "),a("h3",{attrs:{id:"以下代码会输出什么-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以下代码会输出什么-2"}},[s._v("#")]),s._v(" "),a("strong",[s._v("以下代码会输出什么？")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Tom"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"undefined"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Jack"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Goodbye "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("Goodbye Jack,因为 if 没有作用域，所以 var 变量声明提升，在第一个判断时，name 为 undefined")]),s._v(" "),a("h3",{attrs:{id:"js-异步解决方案的发展历程以及优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-异步解决方案的发展历程以及优缺点"}},[s._v("#")]),s._v(" "),a("strong",[s._v("JS 异步解决方案的发展历程以及优缺点")])]),s._v(" "),a("p",[s._v("--------异步")])])}),[],!1,null,null,null);t.default=e.exports}}]);