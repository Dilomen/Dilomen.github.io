(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{555:function(v,_,t){"use strict";t.r(_);var a=t(28),l=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[v._v("#")]),v._v(" 概述")]),v._v(" "),t("p",[v._v("操作系统是连接硬件和应用软件的系统软件，是用以控制和管理系统资源，方便用户使用计算机程序的集合——"),t("em",[v._v("资源管理者")]),v._v("。")]),v._v(" "),t("h2",{attrs:{id:"程序、进程、线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#程序、进程、线程"}},[v._v("#")]),v._v(" 程序、进程、线程")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("程序 = 数据结构 + 算法")])]),v._v(" "),t("li",[t("p",[v._v("程序是静态的，是某个功能指令的有序集合。进程就是“动态的程序”，是"),t("em",[v._v("程序的执行")])])]),v._v(" "),t("li",[t("p",[v._v("进程 = 程序 + 数据 + "),t("em",[v._v("进程控制块")]),v._v("（PCB，用于记录进程信息）")])]),v._v(" "),t("li",[t("p",[v._v("程序和进程可以是"),t("em",[v._v("多对多")]),v._v("，即一个进程可以对应多个程序，一个程序也可以对应多个进程")])]),v._v(" "),t("li",[t("p",[v._v("进程是线程的容器，所以一个进程可以有多个线程，但是一个线程只能属于一个进程")])]),v._v(" "),t("li",[t("p",[v._v("线程是操作系统"),t("em",[v._v("最基本（最小）的调度单元")]),v._v("，当一个进程被创建的时候，同时也会创建一个线程，否则改进程无法被调用执行")])]),v._v(" "),t("li",[t("p",[v._v("进程是资源分配的基本单元，所以每个进程都有独立的资源，而线程不拥有资源（有自己独立的 stack 栈，但是共享 heap 堆），同一个进程下的线程共享当前进程的资源")])]),v._v(" "),t("li",[t("p",[v._v("在多核 CPU 计算机中，多进程和多线程都可以实现并行")])]),v._v(" "),t("li",[t("p",[v._v("系统调用会分配给进程时间片，而一个进程内的线程又会“拆分”这个时间片")])]),v._v(" "),t("li",[t("p",[v._v("线程如果发起系统调用造成阻塞就会使整个进程进入等待状态，即该进程下的所有线程也进入等待状态")])])]),v._v(" "),t("h3",{attrs:{id:"多进程和多线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多进程和多线程"}},[v._v("#")]),v._v(" 多进程和多线程")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("比较项")]),v._v(" "),t("th",[v._v("进程")]),v._v(" "),t("th",[v._v("线程")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("数据传输")]),v._v(" "),t("td",[v._v("需要通过 IPC，数据独立")]),v._v(" "),t("td",[v._v("数据进程共享")])]),v._v(" "),t("tr",[t("td",[v._v("CPU 利用率")]),v._v(" "),t("td",[v._v("低")]),v._v(" "),t("td",[v._v("高")])]),v._v(" "),t("tr",[t("td",[v._v("销毁切换")]),v._v(" "),t("td",[v._v("开销大，速度慢")]),v._v(" "),t("td",[v._v("开销小，速度快")])]),v._v(" "),t("tr",[t("td",[v._v("可靠性")]),v._v(" "),t("td",[v._v("相互不影响")]),v._v(" "),t("td",[v._v("”同住屋檐下“，相互影响")])])])]),v._v(" "),t("h3",{attrs:{id:"进程状态切换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程状态切换"}},[v._v("#")]),v._v(" 进程状态切换")]),v._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"进程状态切换",href:"/计算机通用/进程状态切换.png"}},[t("img",{attrs:{src:"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%80%9A%E7%94%A8/%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81%E5%88%87%E6%8D%A2.png",alt:"进程状态切换"}})])]),v._v(" "),t("ul",[t("li",[v._v("就绪状态通过调度转为运行状态")]),v._v(" "),t("li",[v._v("运行状态在时间片用完后转为就绪状态")]),v._v(" "),t("li",[v._v("当没有可使用的资源，运行状态就会转成阻塞（等待）状态，当然有了资源，就会进入运行状态")])]),v._v(" "),t("h3",{attrs:{id:"进程通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程通信"}},[v._v("#")]),v._v(" 进程通信")]),v._v(" "),t("ul",[t("li",[v._v("管道\n"),t("ul",[t("li",[v._v("匿名管道： 只能是父子进程通信")]),v._v(" "),t("li",[v._v("命名管道： 没有关系的限制，即都可以通信")])])]),v._v(" "),t("li",[v._v("信号量\n"),t("ul",[t("li",[v._v("一般作为锁机制")])])]),v._v(" "),t("li",[v._v("消息队列\n"),t("ul",[t("li",[v._v("由第三方作为中间件来传输消息")])])]),v._v(" "),t("li",[v._v("信号")]),v._v(" "),t("li",[v._v("共享内存\n"),t("ul",[t("li",[v._v("创建一个都能访问的进程")])])]),v._v(" "),t("li",[v._v("套接字")])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),t("p",[v._v("在 node 中，进程通信就是通过管道到方式")]),v._v(" "),t("ul",[t("li",[v._v("windows:命名管道")]),v._v(" "),t("li",[v._v("*nix:Unix Domain socket，由 socket 实现的一种 IPC 方式，也是全双工")])])])])}),[],!1,null,null,null);_.default=l.exports}}]);