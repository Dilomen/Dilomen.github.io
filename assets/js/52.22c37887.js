(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{443:function(t,a,s){"use strict";s.r(a);var r=s(28),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"node-的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-的特点"}},[t._v("#")]),t._v(" Node 的特点")]),t._v(" "),s("h4",{attrs:{id:"异步-i-o"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步-i-o"}},[t._v("#")]),t._v(" 异步 I/O")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./file.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf-8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"事件与回调函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件与回调函数"}},[t._v("#")]),t._v(" 事件与回调函数")]),t._v(" "),s("h4",{attrs:{id:"单线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单线程"}},[t._v("#")]),t._v(" 单线程")]),t._v(" "),s("ul",[s("li",[t._v("缺点\n"),s("ul",[s("li",[t._v("无法利用多核 CPU")]),t._v(" "),s("li",[t._v("错误会引起整个应用崩溃")]),t._v(" "),s("li",[t._v("大量计算会阻塞后面的执行，包括异步")])])]),t._v(" "),s("li",[t._v("解决办法\n"),s("ul",[s("li",[t._v("可以开启多个 Node 服务")]),t._v(" "),s("li",[t._v("使用 child_process 开启子进程")])])])]),t._v(" "),s("h4",{attrs:{id:"跨平台"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨平台"}},[t._v("#")]),t._v(" 跨平台")]),t._v(" "),s("p",[t._v("得益于 libuv 架构层")]),t._v(" "),s("h2",{attrs:{id:"node-应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-应用场景"}},[t._v("#")]),t._v(" Node 应用场景")]),t._v(" "),s("h4",{attrs:{id:"i-o密集型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#i-o密集型"}},[t._v("#")]),t._v(" I/O密集型")]),t._v(" "),s("p",[t._v("利用事件循环的优势，不需要开启多个线程进行不同的I/O处理，资源占用少")]),t._v(" "),s("h4",{attrs:{id:"cpu密集型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cpu密集型"}},[t._v("#")]),t._v(" CPU密集型")]),t._v(" "),s("p",[t._v("如果是有大量的计算，还是使用多线程的方式（语言）适合，\n但是如果是计算比调用I/O耗时要少，那么就可以采用Node处理。"),s("br"),t._v("\nNode使用了C/C++的一些技术实现和子进程的方式来充分利用CPU，总之应该合理的调度任务")]),t._v(" "),s("h4",{attrs:{id:"分布式应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式应用"}},[t._v("#")]),t._v(" 分布式应用")])])}),[],!1,null,null,null);a.default=e.exports}}]);