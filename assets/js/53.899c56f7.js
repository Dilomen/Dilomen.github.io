(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{445:function(s,t,a){"use strict";a.r(t);var e=a(28),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"commonjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[s._v("#")]),s._v(" CommonJS")]),s._v(" "),a("p",[s._v("Node 的实现是离不开 CommonJS，同时 CommonJS 也因 Node 的实现而广为人知")]),s._v(" "),a("p",[s._v("Node 中引入模块的经历过程")]),s._v(" "),a("ul",[a("li",[s._v("路径分析")]),s._v(" "),a("li",[s._v("文件定位")]),s._v(" "),a("li",[s._v("编译执行")])]),s._v(" "),a("p",[s._v("模块分为"),a("em",[s._v("核心模块")]),s._v("（Node 提供的模块）和"),a("em",[s._v("文件模块")]),s._v("（用户编写的模块）")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("Node 会对引入过的模块进行缓存，且缓存的是编译和执行后的的对象，如果在此使用相同模块，就会直接使用对象，而不是再编译"),a("br"),s._v("\n核心模块的缓存检查 优先于 文件模块的缓存检查")])]),s._v(" "),a("h4",{attrs:{id:"路径分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径分析"}},[s._v("#")]),s._v(" 路径分析")]),s._v(" "),a("p",[s._v("require(path)，path 可以分为")]),s._v(" "),a("ul",[a("li",[s._v("核心模块，如 http，fs 等\n"),a("ul",[a("li",[s._v("直接读取 Node 已经编译好的二进制代码")])])]),s._v(" "),a("li",[s._v("./或../的相对路径文件模块")]),s._v(" "),a("li",[s._v("/开头的绝对路径的模块\n"),a("ul",[a("li",[s._v("相对路径和绝对路径都会被转成真实路径来查找具体文件地址")])])]),s._v(" "),a("li",[s._v("第三方依赖，如 express，body-parser 等\n"),a("ul",[a("li",[s._v("首先查找当前文件夹下的 node_modules 目录")]),s._v(" "),a("li",[s._v("如果没有就会查找父目录下的 node_modules 目录")]),s._v(" "),a("li",[s._v("最终找到根目录下的 node_modules 目录")]),s._v(" "),a("li",[s._v("因此文件嵌套越深，加载就越慢")])])])]),s._v(" "),a("h4",{attrs:{id:"文件定位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件定位"}},[s._v("#")]),s._v(" 文件定位")]),s._v(" "),a("p",[s._v("对于以下 3 种后缀，Node 会自动添加并查找相应文件，顺序依次")]),s._v(" "),a("ul",[a("li",[s._v(".js")]),s._v(" "),a("li",[s._v(".json")]),s._v(" "),a("li",[s._v(".node")])]),s._v(" "),a("p",[s._v("但是为了 Node 可以更快的查找到对应文件，.json 和.node 后缀名还是最好加上，减少不必要的性能损耗")]),s._v(" "),a("p",[s._v("如果没有定位到相应文件，而是一个目录，在引入第三方依赖的时候经常出现，")]),s._v(" "),a("ul",[a("li",[s._v("先将该目录当做一个包")]),s._v(" "),a("li",[s._v("查看包下是否有 package.json 文件")]),s._v(" "),a("li",[s._v("如果存在，那么就将 package.json 的内容 JSON.parse 解析出来，取出 main 字段的相应值来确定文件主入口")]),s._v(" "),a("li",[s._v("如果 package.json 不存在或者 package.json 下 main 字段不存在，那么直接使用包下的 index.js 文件")]),s._v(" "),a("li",[s._v("如果上述都不存在，连 index.js，依次 index.json，index.node 还没有，那就直接报异常")])]),s._v(" "),a("h2",{attrs:{id:"模块编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块编译"}},[s._v("#")]),s._v(" 模块编译")]),s._v(" "),a("h4",{attrs:{id:"js-模块编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-模块编译"}},[s._v("#")]),s._v(" JS 模块编译")]),s._v(" "),a("p",[s._v("JS 文件会被包装以下形式，从而避免了全局污染")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" __filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" __dirname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("最终通过一个 runInThisContext 来执行，通过 require 来抛出模块中的 exports 对象")]),s._v(" "),a("h4",{attrs:{id:"c-c-模块编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-c-模块编译"}},[s._v("#")]),s._v(" C/C++模块编译")]),s._v(" "),a("p",[s._v("使用 Node 的 process.dlopen 来加载和执行，C/C++模块会被 JS 执行效率更高，但是开发难度也会比 JS 更高")]),s._v(" "),a("h4",{attrs:{id:"json-模块编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-模块编译"}},[s._v("#")]),s._v(" JSON 模块编译")]),s._v(" "),a("p",[s._v("直接读取文件，通过 JSON.parse()方法返回一个对象")]),s._v(" "),a("h2",{attrs:{id:"npm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[s._v("#")]),s._v(" NPM")]),s._v(" "),a("p",[s._v("包管理工具")])])}),[],!1,null,null,null);t.default=n.exports}}]);